[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "typed_configparser"
authors = [{ name = "Ankit Jain", email = "ajatkj.dev@gmail.com" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
description = "A typed configparser"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["configparser", "typed"]
license = { text = "MIT" }
dynamic = ["version"]

[project.urls]
Repository = "https://github.com/ajatkj/typed_configparser"

[tool.setuptools.packages.find]
exclude = ["typed_configparser.tests*", "typed_configparser.examples*"]

[tool.setuptools_scm]

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.ruff]
line-length = 122

[tool.poe.tasks]
_format = "ruff format -q ."
_format_check = "ruff format --check -q ."
_lint = "ruff ."
_mypy = "mypy  --install-types --non-interactive ."

[tool.poe.tasks.lint]
sequence = ["_lint", "_format", "_mypy"]
help = "Lint code and report any issues."

[tool.poe.tasks.check]
sequence = ["_lint", "_format_check", "_mypy"]
help = "Check linting, formatting and static analysis and report any issues."

[tool.poe.tasks.clean]
shell = """
rm -rf `find . -name __pycache__`
"""
help = "Clear all cache."

[tool.poe.tasks.test]
cmd = "python3 -m unittest -v tests/tests.py"
help = "Run tests"

[tool.poe.tasks._coverage]
shell = "coverage run -m unittest tests/tests.py"
env.COVERAGE_FILE.default = ".coverage_default/coverage_local"
env.CONTEXT.default = "default_context"

[tool.poe.tasks._coverage_pre]
shell = "mkdir -p $(dirname $COVERAGE_FILE)"
env.COVERAGE_FILE.default = ".coverage_default/coverage_local"

[tool.poe.tasks.coverage]
sequence = ["_coverage_pre", "_coverage"]
help = "Run coverage"

[tool.poe.tasks.coverage_report]
shell = "coverage report && coverage html --show-contexts --title 'typed_configparser coverage'"
help = ""
env.COVERAGE_FILE.default = ".coverage_default/coverage_local"
env.CONTEXT.default = "default_context"

[tool.coverage.report]
exclude_also = [
    "def _CUSTOM_REPR_METHOD",
    "def _CUSTOM_STR_METHOD",
    "from _typeshed",
]

[tool.coverage.run]
omit = ["tests/*"]
context = '${CONTEXT}'
